name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Typecheck
        run: npm run typecheck

      - name: Test
        run: npm run test

      - name: Test Coverage
        run: npm run test:coverage

      - name: Bundle Stats
        run: npm run bundle:stats

      - name: Lint
        run: npm run lint

      - name: Format
        run: npm run format

      - name: Format Check
        run: npm run format:check

      - name: Build Storybook (bulma-ui)
        if: github.event_name == 'push' || contains(github.event.pull_request.changed_files, 'bulma-ui/**')
        run: npm run build-storybook -w bulma-ui

      - name: Archive Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            bulma-ui/coverage
          retention-days: 7

      - name: Archive Bundle Stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: |
            bulma-ui/dist/stats.html
            docs/build/stats.html
          retention-days: 7

      - name: Archive Storybook
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: bulma-ui/storybook-static

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Import GPG key
        env:
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
          echo "$GPG_KEY_ID:6:" | gpg --import-ownertrust
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.signingkey "$GPG_KEY_ID"
          git config --global commit.gpgsign true
          git config --global gpg.program gpg
          git config --list

      - name: Test GPG Signing
        run: |
          gpg --list-secret-keys  # Confirm key is imported
          echo "Test file" > test.txt
          git add test.txt
          git commit -m "Test signed commit"
          git log --show-signature -1  # Should show "gpg: Good signature from..." with your key details
          git reset --hard HEAD~1  # Clean up the test commit
      - name: Semantic Release (bulma-ui)
        working-directory: bulma-ui
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git log -1 --show-signature
          npx semantic-release

      - name: Confirm GPG Signature on Last Commit
        if: always()
        run: |
          git log -1 --show-signature

      - name: Verify Published Commits
        run: git log --show-signature -1
